ll prim(int x) {
    priority_queue<pi, vector<pi>, greater<pi>> pq;
    int y;
    ll minimumCost = 0;
    pi p;
    pq.push(make_pair(0, x));
    while(!pq.empty()) {
        p = pq.top();
        pq.pop();
        x = p.second;
        if(marked[x])
            continue;
        minimumCost += p.first;
        marked[x] = true;
        for(pi child : adj[x]) {
            y = child.second; // Node
            if(!marked[y])  pq.push(child);
        }
    }
    return minimumCost;
}