struct FenwickTree {
    vector<ll> bit;
    int n;

    void updateBit(int ind, ll val) {
        for (; ind < n; ind = ind | (ind + 1))
            bit[ind] += val;
    }

    FenwickTree(int _n) {
        n = _n + 1;
        bit.assign(n, 0);
    }

    void updateRange(int l, int r, ll val) {
        updateBit(l, val);
        updateBit(r + 1, -val);
    }

    ll query(int r) {
        ll ret = 0;
        for (; r >= 0; r = (r & (r + 1)) - 1)
            ret += bit[r];
        return ret;
    }

    ll prefix(int l, int r) { return query(r) - query(l - 1); }
};